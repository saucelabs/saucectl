{
  "$schema": "https://json-schema.org/draft-07/schema",
  "$id": "https://saucelabs.com/schema/v1alpha/saucectl.schema.json",
  "title": "SauceCTL Runner Configuration",
  "description": "Configuration file for saucectl.",
  "type": "object",
  "properties": {
    "kind": {
      "enum": [
        "cypress",
        "espresso",
        "playwright",
        "puppeteer",
        "testcafe",
        "xcuitest"
      ]
    }
  },
  "allOf": [
    {
      "if": {
        "properties": {
          "kind": {
            "const": "cypress"
          }
        }
      },
      "then": {
        "$schema": "https://json-schema.org/draft-07/schema",
        "$id": "https://saucelabs.com/schema/v1alpha/cypress.schema.json",
        "title": "saucectl cypress runner configuration",
        "description": "Configuration file for cypress using saucectl",
        "type": "object",
        "allOf": [
          {
            "$schema": "https://json-schema.org/draft-07/schema",
            "$id": "https://saucelabs.com/schema/v1alpha/artifacts.schema.json",
            "title": "saucectl artifacts schema",
            "description": "Subschema for controlling artifacts",
            "type": "object",
            "properties": {
              "artifacts": {
                "description": "Manage test output, such as logs, videos, and screenshots.",
                "type": "object",
                "properties": {
                  "download": {
                    "description": "Settings related to downloading test artifacts from Sauce Labs.",
                    "type": "object",
                    "properties": {
                      "match": {
                        "description": "Specifies which artifacts to download based on whether they match the file pattern provided. Supports the wildcard character '*'.",
                        "type": "array"
                      },
                      "when": {
                        "description": "Specifies when and under what circumstances to download artifacts.",
                        "enum": [
                          "always",
                          "fail",
                          "never",
                          "pass"
                        ]
                      },
                      "directory": {
                        "description": "Specifies the path to the folder in which to download artifacts. A separate subdirectory is generated in this location for each suite.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "when",
                      "match",
                      "directory"
                    ],
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": true
          },
          {
            "$schema": "https://json-schema.org/draft-07/schema",
            "$id": "https://saucelabs.com/schema/v1alpha/docker.schema.json",
            "title": "saucectl docker specific schema",
            "description": "Subschema for docker specific settings",
            "type": "object",
            "properties": {
              "docker": {
                "description": "Properties specific to docker.",
                "type": "object",
                "properties": {
                  "fileTransfer": {
                    "description": "Control how files are made available to the docker image.",
                    "enum": [
                      "copy",
                      "mount"
                    ]
                  },
                  "image": {
                    "description": "Override which docker image to use (in case you have a custom image).",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": true
          },
          {
            "$schema": "https://json-schema.org/draft-07/schema",
            "$id": "https://saucelabs.com/schema/v1alpha/npm.schema.json",
            "title": "saucectl npm specific schema",
            "description": "Subschema for npm specific settings",
            "type": "object",
            "properties": {
              "npm": {
                "description": "Settings specific to npm.",
                "type": "object",
                "properties": {
                  "packages": {
                    "description": "Specifies any npm packages that are required to run tests.",
                    "type": "object"
                  },
                  "registry": {
                    "description": "Override the default and official NPM registry URL with a custom one.",
                    "type": "string"
                  },
                  "strictSSL": {
                    "description": "Whether or not to do SSL key validation when making requests to the registry via https.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": true
          },
          {
            "$schema": "https://json-schema.org/draft-07/schema",
            "$id": "https://saucelabs.com/schema/v1alpha/sauce.schema.json",
            "title": "saucectl sauce specific schema",
            "description": "Subschema for sauce specific settings",
            "type": "object",
            "properties": {
              "sauce": {
                "description": "All settings related to how tests are run and identified in the Sauce Labs platform.",
                "type": "object",
                "properties": {
                  "concurrency": {
                    "description": "Sets the maximum number of suites to execute at the same time. Excess suites are queued and run in order as each suite completes.",
                    "type": "integer",
                    "minimum": 1
                  },
                  "metadata": {
                    "description": "The set of properties that allows you to provide additional information about your project that helps you distinguish it in the various environments in which it is used and reviewed.",
                    "type": "object",
                    "properties": {
                      "build": {
                        "description": "Sauce Labs can aggregate all jobs under one view based on their association with a build.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Tag your jobs so you can find them easier in Sauce Labs.",
                        "type": "array"
                      }
                    },
                    "additionalProperties": false
                  },
                  "region": {
                    "description": "Which Sauce Labs data center to target.",
                    "enum": [
                      "us-west-1",
                      "eu-central-1"
                    ]
                  },
                  "sauceignore": {
                    "description": "Path to the .sauceignore file.",
                    "default": ".sauceignore"
                  },
                  "tunnel": {
                    "description": "SauceCTL supports using Sauce Connect to establish a secure connection when running your tests on Sauce Labs. To do so, launch a tunnel; then provide the identifier in this property.",
                    "properties": {
                      "name": {
                        "description": "The tunnel name.",
                        "type": "string"
                      },
                      "owner": {
                        "description": "The owner (username) of the tunnel. Must be specified if the user that created the tunnel differs from the user that is running the tests.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "additionalProperties": false
                  },
                  "retries": {
                    "description": "The number of times to retry a failing suite.",
                    "type": "integer",
                    "minimum": 0
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": true
          },
          {
            "$schema": "https://json-schema.org/draft-07/schema",
            "$id": "https://saucelabs.com/schema/v1alpha/reporters.schema.json",
            "title": "saucectl reporters specific schema",
            "description": "Subschema for reporters specific settings",
            "type": "object",
            "properties": {
              "reporters": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Toggles the reporter on/off.",
                    "type": "boolean"
                  },
                  "filename": {
                    "description": "Filename for the generated junit report",
                    "type": "string",
                    "default": "saucectl-report.xml"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": true
          }
        ],
        "properties": {
          "apiVersion": {
            "const": "v1alpha"
          },
          "kind": {
            "const": "cypress"
          },
          "showConsoleLog": {
            "description": "Shows suites console.log locally. By default console.log is only shown on failures.",
            "type": "boolean"
          },
          "defaults": {
            "properties": {
              "mode": {
                "$ref": "../subschema/common.schema.json#/definitions/mode"
              },
              "timeout": {
                "$ref": "../subschema/common.schema.json#/definitions/timeout"
              }
            },
            "additionalProperties": false,
            "description": "Settings that are applied onto every suite by default, if no value is set on a suite explicitly.",
            "type": "object"
          },
          "rootDir": {
            "description": "The directory of files that need to be bundled and uploaded for the tests to run.",
            "type": "string"
          },
          "cypress": {
            "description": "Contains details specific to the Cypress project.",
            "type": "object",
            "properties": {
              "configFile": {
                "description": "The designated cypress configuration file. SauceCTL determines related files based on the location of the config file. By default saucectl defers to the test file location defined in cypress.json.",
                "type": "string",
                "examples": [
                  "cypress.json"
                ]
              },
              "key": {
                "description": "The secret key that grants permission to record your tests in the Cypress dashboard.",
                "type": "string"
              },
              "record": {
                "description": "Whether to record your test results in the Cypress dashboard.",
                "type": "boolean"
              },
              "version": {
                "description": "Which framework version to use. Please consult https://docs.saucelabs.com/web-apps/automated-testing/cypress#supported-testing-platforms for available versions.",
                "type": "string"
              },
              "reporters": {
                "description": "Set of reporter to use.",
                "type": "array",
                "minimum": 0,
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the reporter. You may have to install the associated npm dependency through npm.packages field.",
                      "type": "string",
                      "examples": [
                        "dot",
                        "nyan"
                      ]
                    },
                    "options": {
                      "description": "Options to pass to the reporter."
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "configFile",
              "version"
            ],
            "additionalProperties": false
          },
          "env": {
            "description": "Set one or more environment variables. Values can be environment variables themselves. Not supported when running espresso/xcuitest!",
            "type": "object"
          },
          "suites": {
            "description": "The set of properties providing details about the test suites to run.",
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the test suite, which will be reflected in the test results in Sauce Labs.",
                  "type": "string"
                },
                "browser": {
                  "enum": [
                    "chrome",
                    "firefox",
                    "microsoftedge"
                  ],
                  "description": "The name of the browser in which to run the tests."
                },
                "browserVersion": {
                  "description": "Which version of the browser to use.",
                  "type": "string"
                },
                "platformName": {
                  "enum": [
                    "Windows 10"
                  ],
                  "description": "A specific operating system on which to run the tests. Sauce Labs will try to choose a reasonable default if not explicitly specified."
                },
                "screenResolution": {
                  "description": "Specifies a browser window screen resolution, which may be useful if you are attempting to simulate a browser on a particular device type.",
                  "type": "string"
                },
                "config": {
                  "description": "Provides details related to the Cypress test configuration.",
                  "type": "object",
                  "properties": {
                    "testFiles": {
                      "description": "One or more paths to the Cypress test files to run for this suite, if not otherwise specified explicitly in cypress.json.",
                      "type": "array"
                    },
                    "env": {
                      "$ref": "#/allOf/0/then/properties/env"
                    }
                  },
                  "required": [
                    "testFiles"
                  ]
                },
                "mode": {
                  "description": "Instructs saucectl run tests remotely through Sauce Labs (sauce) or locally on docker.",
                  "enum": [
                    "docker",
                    "sauce"
                  ]
                },
                "shard": {
                  "description": "When sharding is configured, saucectl automatically splits the tests (e.g. by spec) so that they can easily run in parallel.",
                  "enum": [
                    "",
                    "spec"
                  ]
                },
                "timeout": {
                  "description": "Instructs how long (in ms, s, m, or h) saucectl should wait for a suite to complete.",
                  "type": "string",
                  "pattern": "^(?:\\d+h)?(?:\\d+m)?(?:\\d+s)?(?:\\d+ms)?$",
                  "examples": [
                    "1h",
                    "10m",
                    "90s"
                  ]
                }
              },
              "required": [
                "name",
                "browser",
                "config"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "cypress",
          "suites"
        ],
        "additionalProperties": true
      }
    },
    {
      "if": {
        "properties": {
          "kind": {
            "const": "espresso"
          }
        }
      },
      "then": {
        "$schema": "https://json-schema.org/draft-07/schema",
        "$id": "https://saucelabs.com/schema/v1alpha/espresso.schema.json",
        "title": "saucectl espresso runner configuration",
        "description": "Configuration file for espresso using saucectl",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/allOf/0/then/allOf/3"
          },
          {
            "$ref": "#/allOf/0/then/allOf/0"
          },
          {
            "$ref": "#/allOf/0/then/allOf/4"
          }
        ],
        "properties": {
          "apiVersion": {
            "const": "v1alpha"
          },
          "kind": {
            "const": "espresso"
          },
          "showConsoleLog": {
            "$ref": "#/allOf/0/then/properties/showConsoleLog"
          },
          "defaults": {
            "$ref": "#/allOf/0/then/properties/defaults",
            "properties": {
              "timeout": {
                "$ref": "../subschema/common.schema.json#/definitions/timeout"
              }
            },
            "additionalProperties": false
          },
          "espresso": {
            "description": "Contains details specific to the Espresso project.",
            "type": "object",
            "properties": {
              "app": {
                "description": "Path to the application. Supports environment variables as values.",
                "type": "string"
              },
              "testApp": {
                "description": "Path to the test application. Supports environment variables as values.",
                "type": "string"
              },
              "otherApps": {
                "description": "A list of applications to be installed alongside the main app. Supports environment variables as values.",
                "type": "array",
                "maxItems": 7
              }
            },
            "required": [
              "app",
              "testApp"
            ],
            "additionalProperties": false
          },
          "suites": {
            "description": "The set of properties providing details about the test suites to run.",
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the test suite, which will be reflected in the test results in Sauce Labs.",
                  "type": "string"
                },
                "testOptions": {
                  "description": "Allows you to control various details on how tests are executed.",
                  "type": "object",
                  "properties": {
                    "class": {
                      "description": "Only run the specified classes.",
                      "type": "array"
                    },
                    "notClass": {
                      "description": "Run all classes except those specified here.",
                      "type": "array"
                    },
                    "package": {
                      "description": "Only run tests in the specified package.",
                      "type": "string"
                    },
                    "notPackage": {
                      "description": "Run all tests except those in this package.",
                      "type": "string"
                    },
                    "size": {
                      "description": "Run only tests that are annotated with the matching size value.",
                      "enum": [
                        "small",
                        "medium",
                        "large"
                      ]
                    },
                    "annotation": {
                      "description": "Only run tests with this annotation.",
                      "type": "string"
                    },
                    "notAnnotation": {
                      "description": "Run all tests except those with this annotation.",
                      "type": "string"
                    },
                    "numShards": {
                      "description": "When sharding is configured, saucectl automatically creates the sharded jobs for each of the devices defined for the suite based on the number of shards you specify. For example, for a suite testing a single emulator version that specifies 2 shards, saucectl clones the suite and runs one shard index on the first suite, and the other shard index on the identical clone suite.",
                      "type": "integer",
                      "minimum": 0
                    },
                    "clearPackageData": {
                      "description": "Removes all shared states from the testing device's CPU and memory at the completion of each test.",
                      "type": "boolean"
                    },
                    "useTestOrchestrator": {
                      "description": "Run each of your tests in its own Instrumentation instance to remove most of the app's shared state from the device CPU and memory between tests. Use this setting in conjunction with clearPackageData: true to completely remove all shared state.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "emulators": {
                  "description": "Defines details for running this suite on virtual devices using an emulator.",
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "description": "The name of the emulator. To ensure name accuracy, check the list of supported virtual devices (https://app.saucelabs.com/live/web-testing/virtual).",
                        "type": "string"
                      },
                      "orientation": {
                        "description": "The screen orientation to use.",
                        "enum": [
                          "landscape",
                          "portrait"
                        ]
                      },
                      "platformVersions": {
                        "description": "The set of one or more versions of the device platform on which to run the test suite.",
                        "type": "array",
                        "minItems": 1
                      }
                    },
                    "required": [
                      "name",
                      "platformVersions"
                    ],
                    "additionalProperties": false
                  }
                },
                "devices": {
                  "description": "Define details for running this suite on real devices.",
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Request a specific device for this test suite by its ID. You can look up device IDs in the Sauce Labs app or using our Devices API (https://docs.saucelabs.com/dev/api/rdc#get-devices).",
                        "type": "string",
                        "examples": [
                          "Google_Pixel_5_real",
                          "Google_Pixel_5_real_us"
                        ]
                      },
                      "name": {
                        "description": "Match the device name in full or partially (regex), which may provide a larger pool of available devices of the type you want.",
                        "type": "string",
                        "examples": [
                          "Google Pixel .*",
                          "Samsung .*"
                        ]
                      },
                      "platformVersion": {
                        "description": "The version of the Android operating system.",
                        "type": "string"
                      },
                      "options": {
                        "description": "Further specify desired device attributes within the pool of devices that match the name and version criteria.",
                        "type": "object",
                        "properties": {
                          "carrierConnectivity": {
                            "description": "Limit the device selection to those that are connected to a cellular network.",
                            "type": "boolean"
                          },
                          "deviceType": {
                            "description": "Limit the device selection to a specific type of device.",
                            "enum": [
                              "ANY",
                              "PHONE",
                              "TABLET"
                            ]
                          },
                          "private": {
                            "description": "Limit the device selection to only match from your organization's private pool.",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "oneOf": [
                      {
                        "required": [
                          "id"
                        ]
                      },
                      {
                        "required": [
                          "name"
                        ]
                      }
                    ],
                    "additionalProperties": false
                  }
                },
                "timeout": {
                  "$ref": "#/allOf/0/then/properties/suites/items/properties/timeout"
                }
              },
              "anyOf": [
                {
                  "required": [
                    "emulators"
                  ]
                },
                {
                  "required": [
                    "devices"
                  ]
                }
              ],
              "required": [
                "name"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "espresso",
          "suites"
        ],
        "additionalProperties": true
      }
    },
    {
      "if": {
        "properties": {
          "kind": {
            "const": "playwright"
          }
        }
      },
      "then": {
        "$schema": "https://json-schema.org/draft-07/schema",
        "$id": "https://saucelabs.com/schema/v1alpha/playwright.schema.json",
        "title": "saucectl playwright runner configuration",
        "description": "Configuration file for playwright using saucectl",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/allOf/0/then/allOf/0"
          },
          {
            "$ref": "#/allOf/0/then/allOf/1"
          },
          {
            "$ref": "#/allOf/0/then/allOf/2"
          },
          {
            "$ref": "#/allOf/0/then/allOf/3"
          },
          {
            "$ref": "#/allOf/0/then/allOf/4"
          }
        ],
        "properties": {
          "apiVersion": {
            "const": "v1alpha"
          },
          "kind": {
            "const": "playwright"
          },
          "showConsoleLog": {
            "$ref": "#/allOf/0/then/properties/showConsoleLog"
          },
          "defaults": {
            "$ref": "#/allOf/0/then/properties/defaults",
            "properties": {
              "mode": {
                "$ref": "../subschema/common.schema.json#/definitions/mode"
              },
              "timeout": {
                "$ref": "../subschema/common.schema.json#/definitions/timeout"
              }
            },
            "additionalProperties": false
          },
          "env": {
            "$ref": "#/allOf/0/then/properties/env"
          },
          "rootDir": {
            "$ref": "#/allOf/0/then/properties/rootDir"
          },
          "playwright": {
            "description": "Contains details specific to the Playwright project.",
            "type": "object",
            "properties": {
              "version": {
                "$ref": "#/allOf/0/then/properties/cypress/properties/version"
              }
            },
            "required": [
              "version"
            ],
            "additionalProperties": false
          },
          "suites": {
            "description": "The set of properties providing details about the test suites to run.",
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the test suite, which will be reflected in the test results in Sauce Labs.",
                  "type": "string"
                },
                "mode": {
                  "$ref": "#/allOf/0/then/properties/suites/items/properties/mode"
                },
                "playwrightVersion": {
                  "$ref": "#/allOf/0/then/properties/cypress/properties/version"
                },
                "testMatch": {
                  "description": "Paths to the playwright test files. Regex values are supported to indicate all files of a certain type or in a certain directory, etc.",
                  "type": "array"
                },
                "platformName": {
                  "$ref": "#/allOf/0/then/properties/suites/items/properties/platformName",
                  "enum": [
                    "Windows 10"
                  ]
                },
                "params": {
                  "description": "Details any additional parameters you wish to set for the test suite.",
                  "type": "object",
                  "properties": {
                    "browserName": {
                      "$ref": "#/allOf/0/then/properties/suites/items/properties/browser",
                      "enum": [
                        "chromium",
                        "firefox",
                        "webkit"
                      ]
                    },
                    "headed": {
                      "description": "Run tests in headed browsers.",
                      "type": "boolean"
                    },
                    "globalTimeout": {
                      "description": "Total timeout in milliseconds for the whole test run.",
                      "type": "integer"
                    },
                    "timeout": {
                      "description": "Changes the timeout for the test (milliseconds).",
                      "type": "integer"
                    },
                    "grep": {
                      "description": "Patterns to filter tests based on their title.",
                      "type": "string"
                    },
                    "repeatEach": {
                      "description": "The number of times to repeat each test.",
                      "type": "integer",
                      "minimum": 0
                    },
                    "retries": {
                      "description": "The maximum number of retry attempts given to failed tests.",
                      "type": "integer",
                      "minimum": 0
                    },
                    "maxFailures": {
                      "description": "The maximum number of test failures for this test run. After reaching this number, testing will stop and exit with an error. Setting to zero (default) disables this behavior.",
                      "type": "integer",
                      "minimum": 0
                    }
                  },
                  "required": [
                    "browserName"
                  ]
                },
                "screenResolution": {
                  "$ref": "#/allOf/0/then/properties/suites/items/properties/screenResolution"
                },
                "env": {
                  "$ref": "#/allOf/0/then/properties/env"
                },
                "numShards": {
                  "description": "When sharding is configured, saucectl automatically creates the sharded jobs based on the number of shards you specify. For example, for a suite that specifies 2 shards, saucectl clones the suite and runs shard 1/2 on the first suite, and the other shard 2/2 on the identical clone suite.",
                  "type": "integer",
                  "minimum": 0
                },
                "timeout": {
                  "$ref": "#/allOf/0/then/properties/suites/items/properties/timeout"
                }
              },
              "required": [
                "name",
                "params",
                "testMatch"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "playwright",
          "suites"
        ],
        "additionalProperties": true
      }
    },
    {
      "if": {
        "properties": {
          "kind": {
            "const": "puppeteer"
          }
        }
      },
      "then": {
        "$schema": "https://json-schema.org/draft-07/schema",
        "$id": "https://saucelabs.com/schema/v1alpha/puppeteer.schema.json",
        "title": "saucectl puppeteer runner configuration",
        "description": "Configuration file for puppeteer using saucectl",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/allOf/0/then/allOf/0"
          },
          {
            "$ref": "#/allOf/0/then/allOf/1"
          },
          {
            "$ref": "#/allOf/0/then/allOf/2"
          },
          {
            "$ref": "#/allOf/0/then/allOf/3"
          },
          {
            "$ref": "#/allOf/0/then/allOf/4"
          }
        ],
        "properties": {
          "apiVersion": {
            "const": "v1alpha"
          },
          "kind": {
            "const": "puppeteer"
          },
          "showConsoleLog": {
            "$ref": "#/allOf/0/then/properties/showConsoleLog"
          },
          "defaults": {
            "$ref": "#/allOf/0/then/properties/defaults",
            "properties": {
              "timeout": {
                "$ref": "../subschema/common.schema.json#/definitions/timeout"
              }
            },
            "additionalProperties": false
          },
          "env": {
            "$ref": "#/allOf/0/then/properties/env"
          },
          "rootDir": {
            "$ref": "#/allOf/0/then/properties/rootDir"
          },
          "puppeteer": {
            "description": "Contains details specific to the Puppeteer project.",
            "type": "object",
            "properties": {
              "version": {
                "$ref": "#/allOf/0/then/properties/cypress/properties/version"
              }
            },
            "required": [
              "version"
            ],
            "additionalProperties": false
          },
          "suites": {
            "description": "The set of properties providing details about the test suites to run.",
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the test suite, which will be reflected in the test results in Sauce Labs.",
                  "type": "string"
                },
                "browser": {
                  "$ref": "#/allOf/0/then/properties/suites/items/properties/browser",
                  "enum": [
                    "chrome",
                    "firefox"
                  ]
                },
                "testMatch": {
                  "description": "The glob patterns Jest uses to detect test files.",
                  "type": "array"
                },
                "env": {
                  "$ref": "#/allOf/0/then/properties/env"
                },
                "browserArgs": {
                  "description": "Browser specific arguments.",
                  "type": "array",
                  "examples": [
                    [
                      "--no-sandbox"
                    ],
                    [
                      "--disable-features=site-per-process"
                    ]
                  ]
                },
                "timeout": {
                  "$ref": "#/allOf/0/then/properties/suites/items/properties/timeout"
                },
                "groups": {
                  "description": "Specific groups of tests.",
                  "type": "array",
                  "examples": [
                    [
                      "group1",
                      "group2"
                    ]
                  ]
                }
              },
              "required": [
                "name",
                "browser",
                "testMatch"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "puppeteer",
          "suites"
        ],
        "additionalProperties": true
      }
    },
    {
      "if": {
        "properties": {
          "kind": {
            "const": "testcafe"
          }
        }
      },
      "then": {
        "$schema": "https://json-schema.org/draft-07/schema",
        "$id": "https://saucelabs.com/schema/v1alpha/testcafe.schema.json",
        "title": "saucectl testcafe runner configuration",
        "description": "Configuration file for testcafe using saucectl",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/allOf/0/then/allOf/0"
          },
          {
            "$ref": "#/allOf/0/then/allOf/1"
          },
          {
            "$ref": "#/allOf/0/then/allOf/2"
          },
          {
            "$ref": "#/allOf/0/then/allOf/3"
          },
          {
            "$ref": "#/allOf/0/then/allOf/4"
          }
        ],
        "properties": {
          "apiVersion": {
            "const": "v1alpha"
          },
          "kind": {
            "const": "testcafe"
          },
          "showConsoleLog": {
            "$ref": "#/allOf/0/then/properties/showConsoleLog"
          },
          "defaults": {
            "$ref": "#/allOf/0/then/properties/defaults",
            "properties": {
              "mode": {
                "$ref": "../subschema/common.schema.json#/definitions/mode"
              },
              "timeout": {
                "$ref": "../subschema/common.schema.json#/definitions/timeout"
              }
            },
            "additionalProperties": false
          },
          "env": {
            "$ref": "#/allOf/0/then/properties/env"
          },
          "rootDir": {
            "$ref": "#/allOf/0/then/properties/rootDir"
          },
          "testcafe": {
            "description": "Contains details specific to the TestCafe project.",
            "type": "object",
            "properties": {
              "version": {
                "$ref": "#/allOf/0/then/properties/cypress/properties/version"
              }
            },
            "required": [
              "version"
            ],
            "additionalProperties": false
          },
          "suites": {
            "description": "The set of properties providing details about the test suites to run.",
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the test suite, which will be reflected in the test results in Sauce Labs.",
                  "type": "string"
                },
                "browserName": {
                  "$ref": "#/allOf/0/then/properties/suites/items/properties/browser",
                  "enum": [
                    "chrome",
                    "firefox",
                    "microsoftedge",
                    "safari"
                  ]
                },
                "browserVersion": {
                  "$ref": "#/allOf/0/then/properties/suites/items/properties/browserVersion"
                },
                "browserArgs": {
                  "description": "Browser specific arguments.",
                  "type": "array",
                  "examples": [
                    [
                      "--no-sandbox"
                    ],
                    [
                      "--disable-features=site-per-process"
                    ]
                  ]
                },
                "platformName": {
                  "$ref": "#/allOf/0/then/properties/suites/items/properties/platformName",
                  "enum": [
                    "macOS 11.00",
                    "Windows 10"
                  ]
                },
                "assertionTimeout": {
                  "description": "Specifies the time (in milliseconds) TestCafe attempts to successfully execute an assertion if a selector property or a client function was passed as an actual value.",
                  "type": "integer",
                  "minimum": 0
                },
                "clientScripts": {
                  "description": "Injects scripts into pages visited during the tests.",
                  "type": "array"
                },
                "env": {
                  "$ref": "#/allOf/0/then/properties/env"
                },
                "mode": {
                  "$ref": "#/allOf/0/then/properties/suites/items/properties/mode"
                },
                "shard": {
                  "description": "When sharding is configured, saucectl automatically splits the tests (e.g. by spec) so that they can easily run in parallel.",
                  "enum": [
                    "",
                    "spec"
                  ]
                },
                "disablePageCaching": {
                  "description": "Prevents the browser from caching page content.",
                  "type": "boolean"
                },
                "disableScreenshots": {
                  "description": "Prevents TestCafe from taking screenshots.",
                  "type": "boolean"
                },
                "disableVideo": {
                  "description": "Disable video recording.",
                  "type": "boolean"
                },
                "filter": {
                  "description": "Allows you to specify which tests or fixtures to run.",
                  "type": "object",
                  "properties": {
                    "test": {
                      "description": "Runs a test with the specified name.",
                      "type": "string"
                    },
                    "testGrep": {
                      "description": "Runs tests whose names match the specified grep pattern.",
                      "type": "string"
                    },
                    "testMeta": {
                      "description": "Runs tests whose metadata matches the specified key-value pair.",
                      "type": "object"
                    },
                    "fixture": {
                      "description": "Runs a test with the specified fixture name.",
                      "type": "string"
                    },
                    "fixtureGrep": {
                      "description": "Runs tests whose fixture names match the specified grep pattern.",
                      "type": "string"
                    },
                    "fixtureMeta": {
                      "description": "Runs tests whose fixture’s metadata matches the specified key-value pair.",
                      "type": "object"
                    }
                  }
                },
                "pageLoadTimeout": {
                  "description": "Specifies the time (in milliseconds) passed after the DOMContentLoaded event, within which TestCafe waits for the window.load event to fire.\n\nAfter the timeout passes or the window.load event is raised (whichever happens first), TestCafe starts the test.",
                  "type": "integer",
                  "minimum": 0
                },
                "quarantineMode": {
                  "description": "Enable quarantine mode to eliminate false negatives and detect unstable tests. TestCafe quarantines tests that fail, and repeats them until they yield conclusive results.",
                  "type": "object",
                  "properties": {
                    "successThreshold": {
                      "description": "The number of successful attempts necessary to confirm a test’s success. The option value should be greater than 0.",
                      "type": "integer",
                      "default": 3
                    },
                    "attemptLimit": {
                      "description": "The maximum number of test execution attempts. The option value must be larger than the value of the successThreshold.",
                      "type": "integer",
                      "default": 5
                    }
                  }
                },
                "screenResolution": {
                  "$ref": "#/allOf/0/then/properties/suites/items/properties/screenResolution"
                },
                "screenshots": {
                  "description": "Allows you to specify the screenshot options.",
                  "type": "object",
                  "properties": {
                    "takeOnFails": {
                      "description": "Specifies that a screenshot should be taken whenever a test fails.",
                      "type": "boolean"
                    },
                    "fullPage": {
                      "description": "Specifies that the full page should be captured, including content that is not visible due to overflow.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "selectorTimeout": {
                  "description": "Specifies the time (in milliseconds) within which selectors attempt to return a node.",
                  "type": "integer",
                  "minimum": 0
                },
                "simulators": {
                  "description": "Run tests against the simulators defined here.",
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "description": "The name of the simulator.",
                        "type": "string",
                        "examples": [
                          "iPhone 12 Simulator"
                        ]
                      },
                      "orientation": {
                        "$ref": "#/allOf/1/then/properties/suites/items/properties/emulators/items/properties/orientation"
                      },
                      "platformName": {
                        "$ref": "#/allOf/0/then/properties/suites/items/properties/platformName",
                        "type": "string"
                      },
                      "platformVersions": {
                        "description": "Which platform versions (OS versions) should be used. Multiple values are treated as 'AND', thus tests run across multiple versions.",
                        "type": "array"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "skipJsErrors": {
                  "description": "Determines whether to ignore JavaScript errors on a webpage.",
                  "type": "boolean"
                },
                "skipUncaughtErrors": {
                  "description": "Ignores uncaught errors and unhandled promise rejections in test code.",
                  "type": "boolean"
                },
                "speed": {
                  "description": "Specifies the test execution speed. Provide a number between 1 (the fastest) and 0.01 (the slowest).",
                  "type": "number",
                  "minimum": 0.01,
                  "maximum": 1
                },
                "src": {
                  "description": "Specifies files or directories from which to run tests.",
                  "type": "array"
                },
                "stopOnFirstFail": {
                  "description": "Stops a test run if a test fails.",
                  "type": "boolean"
                },
                "timeout": {
                  "$ref": "#/allOf/0/then/properties/suites/items/properties/timeout"
                }
              },
              "required": [
                "name",
                "browserName",
                "src"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "testcafe",
          "suites"
        ],
        "additionalProperties": true
      }
    },
    {
      "if": {
        "properties": {
          "kind": {
            "const": "xcuitest"
          }
        }
      },
      "then": {
        "$schema": "https://json-schema.org/draft-07/schema",
        "$id": "https://saucelabs.com/schema/v1alpha/xcuitest.schema.json",
        "title": "saucectl xcuitest runner configuration",
        "description": "Configuration file for xcuitest using saucectl",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/allOf/0/then/allOf/3"
          },
          {
            "$ref": "#/allOf/0/then/allOf/0"
          },
          {
            "$ref": "#/allOf/0/then/allOf/4"
          }
        ],
        "properties": {
          "apiVersion": {
            "const": "v1alpha"
          },
          "kind": {
            "const": "xcuitest"
          },
          "showConsoleLog": {
            "$ref": "#/allOf/0/then/properties/showConsoleLog"
          },
          "defaults": {
            "$ref": "#/allOf/0/then/properties/defaults",
            "properties": {
              "timeout": {
                "$ref": "../subschema/common.schema.json#/definitions/timeout"
              }
            },
            "additionalProperties": false
          },
          "xcuitest": {
            "description": "Contains details specific to the XCUITest project.",
            "type": "object",
            "properties": {
              "app": {
                "description": "Path to the application. Supports environment variables as values.",
                "type": "string"
              },
              "testApp": {
                "description": "Path to the test application. Supports environment variables as values.",
                "type": "string"
              },
              "otherApps": {
                "description": "A list of applications to be installed alongside the main app. Supports environment variables as values.",
                "type": "array"
              }
            },
            "required": [
              "app",
              "testApp"
            ],
            "additionalProperties": false
          },
          "suites": {
            "description": "The set of properties providing details about the test suites to run.",
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the test suite, which will be reflected in the test results in Sauce Labs.",
                  "type": "string"
                },
                "testOptions": {
                  "description": "Allows you to control various details on how tests are executed.",
                  "type": "object",
                  "properties": {
                    "class": {
                      "description": "Only run the specified classes.",
                      "type": "array"
                    },
                    "notClass": {
                      "description": "Run all classes except those specified here.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "devices": {
                  "description": "Define details for running this suite on real devices.",
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Request a specific device for this test suite by its ID. You can look up device IDs in the Sauce Labs app or using our Devices API (https://docs.saucelabs.com/dev/api/rdc#get-devices).",
                        "type": "string",
                        "examples": [
                          "iPhone_12_Pro_14_real",
                          "iPhone_12_Pro_real_us"
                        ]
                      },
                      "name": {
                        "description": "Match the device name in full or partially (regex), which may provide a larger pool of available devices of the type you want.",
                        "type": "string",
                        "examples": [
                          "iPad .*",
                          "iPhone .*"
                        ]
                      },
                      "platformVersion": {
                        "description": "The version of the iOS operating system.",
                        "type": "string"
                      },
                      "options": {
                        "description": "Further specify desired device attributes within the pool of devices that match the name and version criteria.",
                        "type": "object",
                        "properties": {
                          "carrierConnectivity": {
                            "description": "Limit the device selection to those that are connected to a cellular network.",
                            "type": "boolean"
                          },
                          "deviceType": {
                            "description": "Limit the device selection to a specific type of device.",
                            "enum": [
                              "ANY",
                              "PHONE",
                              "TABLET"
                            ]
                          },
                          "private": {
                            "description": "Limit the device selection to only match from your organization's private pool.",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "oneOf": [
                      {
                        "required": [
                          "id"
                        ]
                      },
                      {
                        "required": [
                          "name"
                        ]
                      }
                    ],
                    "additionalProperties": false
                  }
                },
                "timeout": {
                  "$ref": "#/allOf/0/then/properties/suites/items/properties/timeout"
                }
              },
              "anyOf": [
                {
                  "required": [
                    "emulators"
                  ]
                },
                {
                  "required": [
                    "devices"
                  ]
                }
              ],
              "required": [
                "name"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "xcuitest",
          "suites"
        ],
        "additionalProperties": true
      }
    }
  ]
}