{
  "$schema": "https://json-schema.org/draft-07/schema",
  "title": "saucectl playwright cucumberjs runner configuration",
  "description": "Configuration file for cucumber using saucectl",
  "type": "object",
  "allOf": [
    {
      "$ref": "../subschema/artifacts.schema.json"
    },
    {
      "$ref": "../subschema/npm.schema.json"
    },
    {
      "$ref": "../subschema/sauce.schema.json"
    },
    {
      "$ref": "../subschema/reporters.schema.json"
    }
  ],
  "properties": {
    "apiVersion": {
      "const": "v1alpha"
    },
    "kind": {
      "const": "playwright-cucumberjs"
    },
    "showConsoleLog": {
      "$ref": "../subschema/common.schema.json#/definitions/showConsoleLog"
    },
    "defaults": {
      "description": "Settings that are applied onto every suite by default, if no value is set on a suite explicitly.",
      "type": "object",
      "properties": {
        "timeout": {
          "$ref": "../subschema/common.schema.json#/definitions/timeout"
        }
      },
      "additionalProperties": false
    },
    "rootDir": {
      "$ref": "../subschema/common.schema.json#/definitions/rootDir"
    },
    "playwright": {
      "description": "Contains details specific to the playwright.",
      "type": "object",
      "properties": {
        "version": {
          "$ref": "../subschema/common.schema.json#/definitions/version"
        }
      },
      "required": [
        "version"
      ],
      "additionalProperties": false
    },
    "env": {
      "$ref": "../subschema/common.schema.json#/definitions/env"
    },
    "suites": {
      "description": "The set of properties providing details about the test suites to run.",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the test suite, which will be reflected in the test results in Sauce Labs.",
            "type": "string"
          },
          "browserName": {
            "$ref": "../subschema/common.schema.json#/definitions/browser"
          },
          "browserVersion": {
            "$ref": "../subschema/common.schema.json#/definitions/browserVersion"
          },
          "platformName": {
            "$ref": "../subschema/common.schema.json#/definitions/platformName",
            "enum": [
              "macOS 11.00",
              "macOS 12",
              "macOS 13",
              "Windows 10",
              "Windows 11"
            ]
          },
          "screenResolution": {
            "$ref": "../subschema/common.schema.json#/definitions/screenResolution"
          },
          "env": {
            "$ref": "../subschema/common.schema.json#/definitions/env"
          },
          "options": {
            "description": "Provides details related to the Cucumberjs test configuration.",
            "type": "object",
            "properties": {
              "config": {
                "description": "Provides the location of the configuration file.",
                "type": "string"
              },
              "name": {
                "description": "Regular expressions of which cucumber scenario names should match one of to be run.",
                "type": "string"
              },
              "paths": {
                "description": "Paths to where your feature files are.",
                "type": "array"
              },
              "excludedTestFiles": {
                "$ref": "../subschema/common.schema.json#/definitions/excludedTestFiles"
              }, 
              "backtrace": {
                "description": "Show the full backtrace for errors.",
                "type": "boolean"
              },
              "require": {
                "description": "Paths to where your support code is, for CommonJS.",
                "type": "array"
              },
              "import": {
                "description": "Paths to where your support code is, for ESM.",
                "type": "array"
              },
              "tags": {
                "description": "Tag expression to filter which scenarios should be run.",
                "type": "array"
              }, 
              "format": {
                "description": "Name/path and (optionally) output file path of each formatter to use.",
                "type": "array"
              }, 
              "formatOptions": {
                "description": "Options to be provided to cucumber formatters.",
                "type": "array"
              },
              "parallel": {
                "description": "Run tests in parallel with the given number of worker processes.",
                "type": "integer"
              }
            },
            "required": [
              "paths"
            ]
          },
          "shard": {
            "description": "When sharding is configured, saucectl automatically splits the tests (e.g. by spec or concurrency) so that they can easily run in parallel.",
            "enum": [
              "",
              "concurrency",
              "spec"
            ]
          },
          "timeout": {
            "$ref": "../subschema/common.schema.json#/definitions/timeout"
          },
          "preExec": {
            "$ref": "../subschema/common.schema.json#/definitions/preExec"
          },
          "timeZone": {
            "$ref": "../subschema/common.schema.json#/definitions/timeZone"
          },
          "passThreshold": {
            "$ref": "../subschema/common.schema.json#/definitions/passThreshold"
          },
          "smartRetry": {
            "$ref": "../subschema/common.schema.json#/definitions/smartRetry"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      }
    }
  },
  "required": [
    "apiVersion",
    "kind",
    "playwright",
    "suites"
  ],
  "additionalProperties": true
}
