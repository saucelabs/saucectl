{
  "$schema": "https://json-schema.org/draft-07/schema",
  "title": "saucectl testcafe runner configuration",
  "description": "Configuration file for testcafe using saucectl",
  "type": "object",
  "allOf": [
    {
      "$ref": "../subschema/artifacts.schema.json"
    },
    {
      "$ref": "../subschema/npm.schema.json"
    },
    {
      "$ref": "../subschema/sauce.schema.json"
    },
    {
      "$ref": "../subschema/reporters.schema.json"
    }
  ],
  "properties": {
    "apiVersion": {
      "const": "v1alpha"
    },
    "kind": {
      "const": "testcafe"
    },
    "showConsoleLog": {
      "$ref": "../subschema/common.schema.json#/definitions/showConsoleLog"
    },
    "defaults": {
      "description": "Settings that are applied onto every suite by default, if no value is set on a suite explicitly.",
      "type": "object",
      "properties": {
        "timeout": {
          "$ref": "../subschema/common.schema.json#/definitions/timeout"
        }
      },
      "additionalProperties": false
    },
    "env": {
      "$ref": "../subschema/common.schema.json#/definitions/env"
    },
    "rootDir": {
      "$ref": "../subschema/common.schema.json#/definitions/rootDir"
    },
    "testcafe": {
      "description": "Contains details specific to the TestCafe project.",
      "type": "object",
      "properties": {
        "version": {
          "$ref": "../subschema/common.schema.json#/definitions/version",
          "enum": [
            "package.json",
            "3.0.1",
            "2.6.2",
            "2.5.0",
            "2.3.1",
            "2.2.0",
            "2.1.0",
            "2.0.1",
            "2.0.0",
            "1.20.0",
            "1.19.0"
          ]
        }
      },
      "required": [
        "version"
      ],
      "additionalProperties": false
    },
    "suites": {
      "description": "The set of properties providing details about the test suites to run.",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the test suite, which will be reflected in the test results in Sauce Labs.",
            "type": "string"
          },
          "browserName": {
            "$ref": "../subschema/common.schema.json#/definitions/browser",
            "enum": [
              "chrome",
              "firefox",
              "microsoftedge",
              "safari"
            ]
          },
          "browserVersion": {
            "$ref": "../subschema/common.schema.json#/definitions/browserVersion"
          },
          "browserArgs": {
            "description": "Browser specific arguments.",
            "type": "array",
            "examples": [
              [
                "--no-sandbox"
              ],
              [
                "--disable-features=site-per-process"
              ]
            ]
          },
          "headless": {
            "description": "Controls whether or not tests are run in headless mode (default: false)",
            "type": "boolean"
          },
          "platformName": {
            "$ref": "../subschema/common.schema.json#/definitions/platformName",
            "enum": [
              "macOS 11.00",
              "macOS 12",
              "macOS 13",
              "Windows 10",
              "Windows 11"
            ]
          },
          "assertionTimeout": {
            "description": "Specifies the time (in milliseconds) TestCafe attempts to successfully execute an assertion if a selector property or a client function was passed as an actual value.",
            "type": "integer",
            "minimum": 0
          },
          "clientScripts": {
            "description": "Injects scripts into pages visited during the tests.",
            "type": "array"
          },
          "env": {
            "$ref": "../subschema/common.schema.json#/definitions/env"
          },
          "shard": {
            "description": "When sharding is configured, saucectl automatically splits the tests (e.g. by spec or concurrency) so that they can easily run in parallel.",
            "enum": [
              "",
              "concurrency",
              "spec"
            ]
          },
          "compilerOptions": {
            "description": "Specifies the typescript compiler options to be used when running the tests.",
            "type": "object",
            "properties": {
              "typescript": {
                "description": "Specifies the TypeScript options.",
                "type": "object",
                "properties": {
                  "configPath": {
                    "description": "Specifies the path to the TypeScript tsconfig.json file.",
                    "type": "string"
                  },
                  "customCompilerModulePath": {
                    "description": "Specifies the path to a custom TypeScript compiler module.",
                    "type": "string"
                  },
                  "options": {
                    "description": "Specifies TypeScript compiler options. Full reference: https://www.typescriptlang.org/tsconfig#compilerOptions",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            }
          },
          "disablePageCaching": {
            "description": "Prevents the browser from caching page content.",
            "type": "boolean"
          },
          "disableScreenshots": {
            "description": "Prevents TestCafe from taking screenshots.",
            "type": "boolean"
          },
          "disableVideo": {
            "description": "Disable video recording.",
            "type": "boolean"
          },
          "filter": {
            "description": "Allows you to specify which tests or fixtures to run.",
            "type": "object",
            "properties": {
              "test": {
                "description": "Runs a test with the specified name.",
                "type": "string"
              },
              "testGrep": {
                "description": "Runs tests whose names match the specified grep pattern.",
                "type": "string"
              },
              "testMeta": {
                "description": "Runs tests whose metadata matches the specified key-value pair.",
                "type": "object"
              },
              "fixture": {
                "description": "Runs a test with the specified fixture name.",
                "type": "string"
              },
              "fixtureGrep": {
                "description": "Runs tests whose fixture names match the specified grep pattern.",
                "type": "string"
              },
              "fixtureMeta": {
                "description": "Runs tests whose fixture’s metadata matches the specified key-value pair.",
                "type": "object"
              }
            }
          },
          "pageLoadTimeout": {
            "description": "Specifies the time (in milliseconds) passed after the DOMContentLoaded event, within which TestCafe waits for the window.load event to fire.\n\nAfter the timeout passes or the window.load event is raised (whichever happens first), TestCafe starts the test.",
            "type": "integer",
            "minimum": 0
          },
          "quarantineMode": {
            "description": "Enable quarantine mode to eliminate false negatives and detect unstable tests. TestCafe quarantines tests that fail, and repeats them until they yield conclusive results.",
            "type": "object",
            "properties": {
              "successThreshold": {
                "description": "The number of successful attempts necessary to confirm a test’s success. The option value should be greater than 0.",
                "type": "integer",
                "default": 3
              },
              "attemptLimit": {
                "description": "The maximum number of test execution attempts. The option value must be larger than the value of the successThreshold.",
                "type": "integer",
                "default": 5
              }
            }
          },
          "screenResolution": {
            "$ref": "../subschema/common.schema.json#/definitions/screenResolution"
          },
          "screenshots": {
            "description": "Allows you to specify the screenshot options.",
            "type": "object",
            "properties": {
              "takeOnFails": {
                "description": "Specifies that a screenshot should be taken whenever a test fails.",
                "type": "boolean"
              },
              "fullPage": {
                "description": "Specifies that the full page should be captured, including content that is not visible due to overflow.",
                "type": "boolean"
              }
            },
            "additionalProperties": false
          },
          "selectorTimeout": {
            "description": "Specifies the time (in milliseconds) within which selectors attempt to return a node.",
            "type": "integer",
            "minimum": 0
          },
          "ajaxRequestTimeout": {
            "description": "Specifies wait time (in milliseconds) for fetch/XHR requests.",
            "type": "integer",
            "minimum": 0
          },
          "pageRequestTimeout": {
            "description": "Specifies time (in milliseconds) to wait for HTML pages.",
            "type": "integer",
            "minimum": 0
          },
          "browserInitTimeout": {
            "description": "Time (in milliseconds) for browsers to connect to TestCafe and report that they are ready to test.",
            "type": "integer",
            "minimum": 0
          },
          "testExecutionTimeout": {
            "description": "Maximum test execution time (in milliseconds).",
            "type": "integer",
            "minimum": 0
          },
          "runExecutionTimeout": {
            "description": "Maximum test run execution time (in milliseconds).",
            "type": "integer",
            "minimum": 0
          },
          "simulators": {
            "description": "Run tests against the simulators defined here.",
            "type": "array",
            "items": {
              "properties": {
                "name": {
                  "description": "The name of the simulator.",
                  "type": "string",
                  "examples": [
                    "iPhone 12 Simulator"
                  ]
                },
                "orientation": {
                  "$ref": "../subschema/common.schema.json#/definitions/orientation"
                },
                "platformName": {
                  "description": "The name of the simulator platform.",
                  "enum": [
                    "iOS"
                  ]
                },
                "platformVersions": {
                  "description": "Which platform versions (OS versions) should be used. Multiple values are treated as 'AND', thus tests run across multiple versions.",
                  "type": "array"
                }
              },
              "additionalProperties": false
            }
          },
          "skipJsErrors": {
            "description": "Determines whether to ignore JavaScript errors on a webpage.",
            "type": "boolean"
          },
          "skipUncaughtErrors": {
            "description": "Ignores uncaught errors and unhandled promise rejections in test code.",
            "type": "boolean"
          },
          "speed": {
            "description": "Specifies the test execution speed. Provide a number between 1 (the fastest) and 0.01 (the slowest).",
            "type": "number",
            "minimum": 0.01,
            "maximum": 1
          },
          "src": {
            "description": "Specifies files or directories from which to run tests.",
            "type": "array"
          },
          "stopOnFirstFail": {
            "description": "Stops a test run if a test fails.",
            "type": "boolean"
          },
          "timeout": {
            "$ref": "../subschema/common.schema.json#/definitions/timeout"
          },
          "preExec": {
            "$ref": "../subschema/common.schema.json#/definitions/preExec"
          },
          "excludedTestFiles": {
            "$ref": "../subschema/common.schema.json#/definitions/excludedTestFiles"
          },
          "timeZone": {
            "$ref": "../subschema/common.schema.json#/definitions/timeZone"
          },
          "passThreshold": {
            "$ref": "../subschema/common.schema.json#/definitions/passThreshold"
          },
          "smartRetry": {
            "$ref": "../subschema/common.schema.json#/definitions/smartRetry"
          }
        },
        "required": [
          "name",
          "browserName",
          "src"
        ],
        "additionalProperties": false
      }
    }
  },
  "required": [
    "apiVersion",
    "kind",
    "testcafe",
    "suites"
  ],
  "additionalProperties": true
}

