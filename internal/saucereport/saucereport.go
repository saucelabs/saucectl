package saucereport

import "time"

// The different states that a job can be in.
const (
	StatusPassed  = "passed"
	StatusSkipped = "skipped"
	StatusFailed  = "failed"
)

// SauceReport represents a report generated by Sauce Labs.
type SauceReport struct {
	Status      string       `json:"status,omitempty"`
	Attachments []Attachment `json:"attachments,omitempty"`
	Suites      []Suite      `json:"suites,omitempty"`
}

// Suite represents a suite in a report.
type Suite struct {
	Name        string       `json:"name,omitempty"`
	Status      string       `json:"status,omitempty"`
	Metadata    Metadata     `json:"metadata,omitempty"`
	Suites      []Suite      `json:"suites,omitempty"`
	Attachments []Attachment `json:"attachments,omitempty"`
	Tests       []Test       `json:"tests,omitempty"`
}

// Test represents a test in a report.
type Test struct {
	Name           string       `json:"name,omitempty"`
	Status         string       `json:"status,omitempty"`
	StartTime      time.Time    `json:"startTime,omitempty"`
	Duration       int          `json:"duration,omitempty"`
	Attachments    []Attachment `json:"attachments,omitempty"`
	Metadata       Metadata     `json:"metadata,omitempty"`
	Output         string       `json:"output,omitempty"`
	Code           Code         `json:"code,omitempty"`
	VideoTimestamp int          `json:"VideoTimestamp,omitempty"`
}

// Code represents the code of a test.
type Code struct {
	Lines []string `json:"lines,omitempty"`
}

// Attachment represents an attachment.
type Attachment struct {
	Name        string `json:"name,omitempty"`
	Path        string `json:"path,omitempty"`
	ContentType string `json:"contentType,omitempty"`
}

// Metadata represents metadata.
type Metadata map[string]interface{}
