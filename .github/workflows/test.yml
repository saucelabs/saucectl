name: saucectl tests pipeline

on:
  pull_request:
  push:
    branches:
      - master

env:
  SAUCE_USERNAME: ${{secrets.SAUCE_USERNAME}}
  SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}
  BUILD_ID: saucectl-run-${{ github.run_id }}

jobs:
  lint:
    runs-on: ubuntu-latest
    container:
      image: golang:1.16-alpine

    steps:
      - name: Install Dependencies
        run: apk add --no-cache git gcc g++ curl

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Lint project
        run: |
          go get -u golang.org/x/lint/golint
          golint -set_exit_status ./...
  test:
    runs-on: ubuntu-latest
    container:
      image: golang:1.16-alpine

    steps:
      - name: Install Dependencies
        run: apk add --no-cache git gcc g++ curl bash

      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 50

      - name: Run tests
        run: |
          go test -coverprofile=coverage.txt -covermode=atomic ./...
          coverage=$(go tool cover -func=coverage.txt | tail -n 1 | awk '{ print $3 }' | tr -d '%' | cut -d . -f 1)
          threshold=40
          if [ $coverage -lt $threshold ]; then echo 'Code coverage below threshold!' && exit 1; fi
  build:
    needs: lint
    runs-on: ubuntu-latest
    container:
      image: golang:1.16-alpine

    steps:
      - name: Install Dependencies
        run: apk add --no-cache git gcc g++ curl

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Build project
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)
          LDFLAG_VERSION="github.com/saucelabs/saucectl/cli/version.Version=v0.0.0+$SHORT_SHA"
          LDFLAG_SHA="github.com/saucelabs/saucectl/cli/version.GitCommit=$GITHUB_SHA"
          go install ./...
          CGO_ENABLED=0 go build -ldflags="-X $LDFLAG_VERSION -X $LDFLAG_SHA" cmd/saucectl/saucectl.go
          GOOS=windows GOARCH=amd64 go build cmd/saucectl/saucectl.go

      - name: Check GoReleaser config
        uses: goreleaser/goreleaser-action@v1
        with:
          version: latest
          args: check

      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: saucectlbin
          path: |
            saucectl
            saucectl.exe
  puppeteer:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download saucectl binary
        uses: actions/download-artifact@v2
        with:
          name: saucectlbin

      - name: Set permissions
        run: chmod +x ./saucectl

      - name: Saucectl RUN
        run: ./saucectl run -c .sauce/puppeteer.yml --timeout 10m
  playwright:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download saucectl binary
        uses: actions/download-artifact@v2
        with:
          name: saucectlbin

      - name: Set permissions
        run: chmod +x ./saucectl

      - name: Saucectl RUN
        run: ./saucectl run -c .sauce/playwright.yml --timeout 10m
  testcafe:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download saucectl binary
        uses: actions/download-artifact@v2
        with:
          name: saucectlbin

      - name: Set permissions
        run: chmod +x ./saucectl

      - name: Saucectl RUN - Config Driven
        run: ./saucectl run -c .sauce/testcafe.yml --timeout 10m

      - name: Saucectl RUN - CLI Driven
        run: ./saucectl run testcafe "*.test.js" -c .sauce/testcafe_light.yml --name "CLI Driven" --browserName chrome --timeout 10m
  cypress:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download saucectl binary
        uses: actions/download-artifact@v2
        with:
          name: saucectlbin

      - name: Set permissions
        run: chmod +x ./saucectl

      - name: Saucectl RUN
        run: |
          ./saucectl run -c .sauce/cypress.yml --timeout 10m
  cypress-windows:
    needs: build
    runs-on: windows-latest
    env:
      BUILD_ID: ${{ github.run_id }}
      BUILD_ENV: GitHub Actions

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download saucectl binary
        uses: actions/download-artifact@v2
        with:
          name: saucectlbin

      - name: Saucectl RUN
        run: |
          ./saucectl.exe run -c .sauce/cypress.yml --suite "saucy test in sauce" --timeout 10m
  espresso:
    needs: build
    runs-on: ubuntu-latest
    env:
      BUILD_ID: ${{ github.run_id }}
      BUILD_ENV: GitHub Actions

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download saucectl binary
        uses: actions/download-artifact@v2
        with:
          name: saucectlbin

      - name: Set permissions
        run: chmod +x ./saucectl

      - name: Saucectl RUN - Config Driven
        run: |
          ./saucectl run -c .sauce/espresso.yml

      - name: Saucectl RUN - CLI Driven
        run: |
          ./saucectl run espresso -c .sauce/espresso_light.yml --name "CLI Driven" --app ./tests/e2e/espresso/calc.apk --testApp ./tests/e2e/espresso/calc-success.apk --emulator name="Android GoogleApi Emulator",platformVersion=11.0 --testOptions.size small
  xcuitest:
    needs: build
    runs-on: ubuntu-latest
    env:
      BUILD_ID: ${{ github.run_id }}
      BUILD_ENV: GitHub Actions

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download saucectl binary
        uses: actions/download-artifact@v2
        with:
          name: saucectlbin

      - name: Set permissions
        run: chmod +x ./saucectl

      - name: Saucectl RUN - Config Driven
        run: |
          ./saucectl run -c .sauce/xcuitest.yml --timeout 10m

      - name: Saucectl RUN - CLI Driven
        run: |
          ./saucectl run xcuitest -c .sauce/xcuitest_light.yml --name "cli driven" --app ./tests/e2e/xcuitest/SauceLabs.Mobile.Sample.XCUITest.App.ipa --testApp ./tests/e2e/xcuitest/SwagLabsMobileAppUITests-Runner.ipa --device name="iPhone.*" --timeout 10m
