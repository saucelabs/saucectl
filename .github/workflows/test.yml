# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: saucectl tests pipeline

on:
  pull_request:
  push:
    branches:
      - master

env:
  SAUCE_USERNAME: ${{secrets.SAUCE_USERNAME}}
  SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}


jobs:
  lint:
    runs-on: ubuntu-latest
    container:
      image: golang:1.16-alpine

    steps:
      - name: Install Dependencies
        run: apk add --no-cache git gcc g++ curl

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Lint project
        run: |
          go get -u golang.org/x/lint/golint
          golint -set_exit_status ./...
  test:
    runs-on: ubuntu-latest
    container:
      image: golang:1.16-alpine

    steps:
      - name: Install Dependencies
        run: apk add --no-cache git gcc g++ curl bash

      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 50

      - name: Run tests
        run: |
          go test -coverprofile=coverage.txt -covermode=atomic ./...
          coverage=$(go tool cover -func=coverage.txt | tail -n 1 | awk '{ print $3 }' | tr -d '%' | cut -d . -f 1)
          threshold=40
          if [ $coverage -lt $threshold ]; then echo 'Code coverage below threshold!' && exit 1; fi
  build:
    needs: lint
    runs-on: ubuntu-latest
    container:
      image: golang:1.16-alpine

    steps:
      - name: Install Dependencies
        run: apk add --no-cache git gcc g++ curl

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Build project
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)
          LDFLAG_VERSION="github.com/saucelabs/saucectl/cli/version.Version=v0.0.0+$SHORT_SHA"
          LDFLAG_SHA="github.com/saucelabs/saucectl/cli/version.GitCommit=$GITHUB_SHA"
          go install ./...
          CGO_ENABLED=0 go build -ldflags="-X $LDFLAG_VERSION -X $LDFLAG_SHA" cmd/saucectl/saucectl.go
          GOOS=windows GOARCH=amd64 go build cmd/saucectl/saucectl.go

      - name: Check GoReleaser config
        uses: goreleaser/goreleaser-action@v1
        with:
          version: latest
          args: check

      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: saucectlbin
          path: |
            saucectl
            saucectl.exe
  puppeteer-from-template:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download saucectl binary
        uses: actions/download-artifact@v2
        with:
          name: saucectlbin

      - name: Set permissions
        run: chmod +x ./saucectl

      - name: Create safe place
        run: mkdir scratch

      - name: Saucectl NEW
        working-directory: scratch
        run: |
          ../saucectl new -f puppeteer

      - name: Saucectl RUN Docker
        working-directory: scratch
        run: ../saucectl run --test-env docker --ccy 10
        env:
          BUILD_ID: ${{ github.run_id }}
  playwright-from-template:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download saucectl binary
        uses: actions/download-artifact@v2
        with:
          name: saucectlbin

      - name: Set permissions
        run: chmod +x ./saucectl

      - name: Create safe place
        run: mkdir scratch

      - name: Saucectl NEW
        working-directory: scratch
        run: |
          ../saucectl new -f playwright

      - name: Saucectl RUN Docker
        working-directory: scratch
        run: ../saucectl run --test-env docker --ccy 10
        env:
          BUILD_ID: ${{ github.run_id }}

      - name: Saucectl RUN Sauce Cloud
        working-directory: scratch
        run: ../saucectl run --test-env sauce --ccy 10
        env:
          BUILD_ID: ${{ github.run_id }}

      - name: Saucectl RUN Docker and Sauce Cloud
        working-directory: scratch
        run: ../saucectl run --ccy 10
        env:
          BUILD_ID: ${{ github.run_id }}

  testcafe-from-template:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download saucectl binary
        uses: actions/download-artifact@v2
        with:
          name: saucectlbin

      - name: Set permissions
        run: chmod +x ./saucectl

      - name: Create safe place
        run: mkdir scratch

      - name: Saucectl NEW
        working-directory: scratch
        run: |
          ../saucectl new -f testcafe

      - name: Saucectl RUN Docker
        working-directory: scratch
        run: ../saucectl run --test-env docker --ccy 10
        env:
          BUILD_ID: ${{ github.run_id }}

      - name: Saucectl RUN Sauce Cloud
        working-directory: scratch
        run: ../saucectl run --test-env sauce --ccy 10
        env:
          BUILD_ID: ${{ github.run_id }}

      - name: Saucectl RUN Docker and Sauce Cloud
        working-directory: scratch
        run: ../saucectl run --ccy 10
        env:
          BUILD_ID: ${{ github.run_id }}

  cypress-from-template:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download saucectl binary
        uses: actions/download-artifact@v2
        with:
          name: saucectlbin

      - name: Set permissions
        run: chmod +x ./saucectl

      - name: Create safe place
        run: mkdir scratch

      - name: Saucectl NEW
        working-directory: scratch
        run: |
          ../saucectl new -f cypress

      - name: Saucectl RUN Docker
        working-directory: scratch
        run: |
          ../saucectl run --test-env docker --ccy 10
        env:
          BUILD_ID: ${{ github.run_id }}

      - name: Saucectl RUN Sauce Cloud
        working-directory: scratch
        run: |
          ../saucectl run --test-env sauce --ccy 10
        env:
          BUILD_ID: ${{ github.run_id }}
 
      - name: Saucectl RUN Docker and Sauce Cloud
        working-directory: scratch
        run: |
          ../saucectl run --ccy 10
        env:
          BUILD_ID: ${{ github.run_id }}
  cypress-windows:
    needs: build
    runs-on: windows-latest
    env:
      BUILD_ID: ${{ github.run_id }}
      BUILD_ENV: GitHub Actions

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download saucectl binary
        uses: actions/download-artifact@v2
        with:
          name: saucectlbin

      - name: Run Sauce Pipeline Test - Sauce Cloud
        run: |
          ./saucectl.exe run -c .sauce/cypress_cloud.yml --test-env sauce --ccy 5
  espresso:
    needs: build
    runs-on: ubuntu-latest
    env:
      BUILD_ID: ${{ github.run_id }}
      BUILD_ENV: GitHub Actions

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download saucectl binary
        uses: actions/download-artifact@v2
        with:
          name: saucectlbin

      - name: Set permissions
        run: chmod +x ./saucectl

      - name: Run Sauce Pipeline Test - Sauce Cloud
        run: |
          ./saucectl run -c .sauce/espresso.yml --test-env sauce --ccy 10
        env:
          BUILD_ID: ${{ github.run_id }}
